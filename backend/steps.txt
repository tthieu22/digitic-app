/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BACK END


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

npm init 
npm i express mongoose bcrypt body-parser dotenv

** Run
npm start server
 (package.json) add {
    "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1",
        "start": "node index.js",
        "server": "nodemon index.js"
    },
}

** Create User
index ==> Models-> userModel (!mdbgum) ==> Ctroller -> userCtrol ==> routes -> authRoute ==> middlewares -> errorHandler
npm i nodemon --save-dev
** Mã hóa Password
npm i express-async-handler

**Token thoong bao cho nguoi dung -> xac minh nguoi dung 
npm i jsonwebtoken
*get a User
config ==> jwtToken ==> middlewares -> authmiddleware -> athRoute(      U : router.get("/:id", authmiddleware, getaUser)     )
* update user uses Api dung token xac minh token
* block a user when you are admin and you need an id user of the account you want block 
router.put("/block-user/:id", authmiddleware, isAdmin, blockUser);
** verified user id 
Create folder Utils -> validateMonfgodbID 
** Phan tich cookie --> refreshToken 3day 72*60*60*1000
npm i cookie-parser
-> handlerRefreshToken 
** Log out  

** Product : Model-> control -> router
morgan - > npm i morgan
** slugify -> auto create slug follow title
slugify-> npm i slugify
** search with filter 
gte : min
lte : max
localhost:5000/api/product?price[gte]=22000&price[lte]=40000 || postman
** search sort 
localhost:5000/api/product?sort=-category,-brand
** limiting the fields
localhost:5000/api/product?fields=title,price,category
**pagination
localhost:5000/api/product?page=7&limit=3
**Hide Password || resetTokenPassword || changed Password
login -> get token 
localhost:5000/api/user/password

npm i nodemailer
->search nodemailer {}
**forgot password with email
-create app password (my account :security -> 2 steps verification ->app password )
localhost:5000/api/user/forgot-password-token
** blog category , Product category ,Brand -> create update delete get a , get all
** add to wishlist , rating -> productCtrl 
**add image create link of image with cloudinary 
 npm i multer sharp cloundinary
untils -> cloudinary => middlewares -> uploadImage 
post man : {{base_url}}product/upload/667d416297dc47aa4270eb63 
image :filename 

router.put("/upload/:id", authmiddleware, isAdmin, uploadPhotoProduct.array('image', 10), uploadImages, productImgResize)
router.put("/upload/:id", authmiddleware, isAdmin, uploadPhotoBlog.array('image', 10), uploadImages, blogImgResize)

** order cart 
npm i uniqid

** delete image and create color enquiry >>>

done Backend

npm i cors


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


ADMIN FRONT END


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
npm i react-icons
npm i react-router-dom
npm i antd

create layout with ant design
*dashboard
npm install @ant-design/charts --force

form add 
npm i react-quill
npm install react-form-stepper --save

npm install axios --force

npm i yup --force
npm install formik 
npm install @reduxjs/toolkit react-redux --force 

create app /store -> index.js import

create util features / auth /authSlice  && authService
configuration them

util -> base_url : link localhost/api
Yup use Warning

use Select in antd
Notice show 
npm install --save react-toastify





///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


FRONT END 


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
npx create-react-app digital-fe --template redux
npm i react-icons
npm i react-router-dom

delete some file don't use 
keep app.css app.js index.js

** create components , pages 

react router dom oulet 
__ create page Home 
setting write html in  .js
"emmet.includeLanguages": {
        "javascript": "javascriptreact"
}

** instal slide Marqee play logo
npm i react fast marquee

** rating instal libary 
npm i react-rating-stars-component
** instal swiper 
npm i swiper

** instal react helmet 
npm i react-helmet
use change title

** Our store use 
let location = useLocation();

zoom image product
npm i react-image-zoom

done html css
CustomInput / Container short code

domain 
netlify.com
'

npm install @reduxjs/toolkit
npm install react-redux
npm i axios
npm install formik --save

npm i yup
npm i react-toastify